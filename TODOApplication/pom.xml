<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.3</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>todoapplication</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>todoapplication</name>
	<description>ToDo Application with autentication mechanism- Exam</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<db.docker.dns>localhost</db.docker.dns>
		<db.docker.port>3306</db.docker.port>
		<JDBC-URL>jdbc:mysql://${db.docker.dns}:${db.docker.port}/db_example?createDatabaseIfNotExist=true</JDBC-URL>
		<sonar.coverage.exclusions>
			**/TodoApplication.*
		</sonar.coverage.exclusions>
		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
		<sonar.projectKey>BernabeiPietro_todo-application</sonar.projectKey>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.8.0.2131</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.9.1</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<configuration>
					<excludes>
						<exclude>**/TodoApplication.*</exclude>

					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<!-- binds by default to the phase "initialize" -->
							<goal>prepare-agent</goal>
							<!-- binds by default to the phase "verify" -->
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<dependencies>
					<!-- This is required when using JDK 9 or higher since javax.xml.bind 
						has been removed from the JDK -->
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.3.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>

				<executions>
					<execution>
						<id>default-it</id>
						<configuration>
							<includes>
								<include>**/*ApplicationTests.java</include>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
								<exclude>**/*ApplicationTests.java</exclude>

							</excludes>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.34.1</version>
				<configuration>
					<showLogs>true</showLogs>
					<verbose>build</verbose>
					<images>
						<image>
							<name>mysql:5.6</name>
							<run>
								<wait>
									<tcp>
										<ports>
											<port>${db.docker.port}</port>
										</ports>
									</tcp>
									<time>100000</time>
								</wait>
								<env>
									<MYSQL_ROOT_PASSWORD>password</MYSQL_ROOT_PASSWORD>
									<MYSQL_DATABASE>db_example</MYSQL_DATABASE>
									<MYSQL_USER>user</MYSQL_USER>
									<MYSQL_PASSWORD>password</MYSQL_PASSWORD>
								</env>
								<ports>
									<port>${db.docker.port}:${db.docker.port}</port>
								</ports>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- <profile> <id>docker</id> <build> <plugins> <plugin> <groupId>io.fabric8</groupId> 
			<artifactId>docker-maven-plugin</artifactId> <version>0.34.1</version> <configuration> 
			<autoCreateCustomNetworks>true</autoCreateCustomNetworks> <showLogs>true</showLogs> 
			<verbose>build</verbose> <images> <image> <name>todoapp</name> <build> <contextDir>${project.basedir}</contextDir> 
			<args> <jarToCopy>${project.artifactId}-${project.version}.jar</jarToCopy> 
			</args> </build> <run> <ports> <port>8080:8080</port> </ports> <network> 
			<mode>custom</mode> <name>my-network</name> </network> <dependsOn> <container>mysql</container> 
			</dependsOn> </run> </image> <image> <alias>mysql</alias> <name>mysql:5.6</name> 
			<run> <network> <mode>custom</mode> <name>my-network</name> <alias>${db.docker.dns}</alias> 
			</network> <wait> <tcp> <ports> <port>${db.docker.port}</port> </ports> </tcp> 
			<time>100000</time> </wait> <env> <MYSQL_ROOT_PASSWORD>password</MYSQL_ROOT_PASSWORD> 
			<MYSQL_DATABASE>db_example</MYSQL_DATABASE> <MYSQL_USER>user</MYSQL_USER> 
			<MYSQL_PASSWORD>password</MYSQL_PASSWORD> </env> </run> </image> </images> 
			</configuration> <executions> <execution> <id>docker-build-image</id> <phase>package</phase> 
			<goals> <goal>build</goal> </goals> </execution> <execution> <id>docker-verify</id> 
			<phase>verify</phase> <goals> <goal>start</goal> <goal>stop</goal> </goals> 
			</execution> </executions> </plugin> </plugins> </build> </profile> -->
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coveralls</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<!-- JaCoCo report is required by coveralls-maven-plugin -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
